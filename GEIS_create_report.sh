sqlite3 WGS_Database_singleUse.db;

DROP VIEW if exists PRELIMINARY_REPORT_1;
DROP VIEW if exists PRELIMINARY_REPORT_2;
DROP VIEW if exists REPORT1;
DROP VIEW if exists REPORT_FINAL;

CREATE VIEW PRELIMINARY_REPORT_1 AS
SELECT FILE_ID, ROW_ID,
group_concat(CASE ATTR_ID WHEN 'SAMPLE_ID' THEN ATTR_VAL END) AS 'SAMPLE_ID',
group_concat(CASE ATTR_ID WHEN 'PATH' THEN ATTR_VAL END) AS 'FASTA_PATH',
group_concat(CASE ATTR_ID WHEN 'Lineage' THEN ATTR_VAL END) AS 'LINEAGE',
group_concat(CASE ATTR_ID WHEN 'Scorpio call' THEN ATTR_VAL END) AS 'SCORPIO_CALL',
group_concat(CASE ATTR_ID WHEN 'pangolin version' THEN ATTR_VAL END) AS 'PANGOLIN_VERSION',
group_concat(CASE ATTR_ID WHEN 'clade' THEN ATTR_VAL END) AS 'CLADE',
group_concat(CASE ATTR_ID WHEN 'CGS_Number' THEN ATTR_VAL END) AS 'CGS_NUMBER',
group_concat(CASE ATTR_ID WHEN 'aaSubstitutions' THEN ATTR_VAL END) AS 'AA_SUBSTITUTIONS',
group_concat(CASE ATTR_ID WHEN 'COVERAGE' THEN ATTR_VAL END) AS 'COVERAGE',
group_concat(CASE ATTR_ID WHEN 'AVG DEPTH' THEN ATTR_VAL END) AS 'AVERAGE_DEPTH',
group_concat(CASE ATTR_ID WHEN 'MUTATIONS' THEN ATTR_VAL END) AS 'MUTATIONS',
group_concat(CASE ATTR_ID WHEN 'MUT SYN' THEN ATTR_VAL END) AS 'MUT_SYN',
group_concat(CASE ATTR_ID WHEN 'MUT NSYN' THEN ATTR_VAL END) AS 'MUT_NSYN',
group_concat(CASE ATTR_ID WHEN 'SUB CLONAL' THEN ATTR_VAL END) AS 'SUBCLONAL',
group_concat(CASE ATTR_ID WHEN 'INDELS' THEN ATTR_VAL END) AS 'INDELS',
group_concat(CASE ATTR_ID WHEN 'INPUT' THEN ATTR_VAL END) AS 'RUN_INPUT',
group_concat(CASE ATTR_ID WHEN 'RAW READS' THEN ATTR_VAL END) AS 'RAW_READS'
FROM ANALYZED_DATA_TABLE
GROUP BY FILE_ID, ROW_ID
ORDER BY FILE_ID;

CREATE VIEW PRELIMINARY_REPORT_2 AS
SELECT FILE_ID, ROW_ID,
group_concat(CASE ATTR_ID WHEN 'SAMPLE_ID' THEN ATTR_VAL END) AS 'SAMPLE_ID',
group_concat(CASE ATTR_ID WHEN 'TIMESTAMP' THEN ATTR_VAL END) AS 'TIMESTAMP',
group_concat(CASE ATTR_ID WHEN 'Notes/Next steps' THEN ATTR_VAL END) AS 'NOTES',
group_concat(CASE ATTR_ID WHEN 'Reason For Sequencing' THEN ATTR_VAL END) AS 'REASON_FOR_SEQUENCING',
group_concat(CASE ATTR_ID WHEN 'Date Arrived' THEN ATTR_VAL END) AS 'DATE_ARRIVED',
group_concat(CASE ATTR_ID WHEN 'Sequencing Date' THEN ATTR_VAL END) AS 'SEQUENCING_DATE',
group_concat(CASE ATTR_ID WHEN 'CT value' THEN ATTR_VAL END) AS 'CT_VALUE',
group_concat(CASE ATTR_ID WHEN 'Method' THEN ATTR_VAL END) AS 'METHOD',
group_concat(CASE ATTR_ID WHEN 'Type' THEN ATTR_VAL END) AS 'SAMPLE_TYPE',
group_concat(CASE ATTR_ID WHEN 'Analysis Date' THEN ATTR_VAL END) AS 'ANALYSIS_DATE',
group_concat(CASE ATTR_ID WHEN 'Lab Personnel' THEN ATTR_VAL END) AS 'LAB_PERSONNEL',
group_concat(CASE ATTR_ID WHEN 'Sequencer' THEN ATTR_VAL END) AS 'MACHINE',
group_concat(CASE ATTR_ID WHEN 'DMIS_FACILITY_NAME' THEN ATTR_VAL END) AS 'DMIS_FACILITY_NAME',
group_concat(CASE ATTR_ID WHEN 'DMIS_ID' THEN ATTR_VAL END) AS 'DMIS_ID',
group_concat(CASE ATTR_ID WHEN 'Date collected' THEN ATTR_VAL END) AS 'SAMPLE_COLLECTION_DATE',
group_concat(CASE ATTR_ID WHEN 'INSTALLATION_NAME' THEN ATTR_VAL END) AS 'MILITARY_INSTALLATION',
group_concat(CASE ATTR_ID WHEN 'STATE_CODE' THEN ATTR_VAL END) AS 'STATE_CODE_IF_CONUS',
group_concat(CASE ATTR_ID WHEN 'Age' THEN ATTR_VAL END) AS 'AGE',
group_concat(CASE ATTR_ID WHEN 'Sex' THEN ATTR_VAL END) AS 'SEX',
group_concat(CASE ATTR_ID WHEN 'Symptomatic' THEN ATTR_VAL END) AS 'SYMPTOM_STATUS',
group_concat(CASE ATTR_ID WHEN 'Vaccine' THEN ATTR_VAL END) AS 'VACCINE_TYPE',
group_concat(CASE ATTR_ID WHEN 'VAX date 1' THEN ATTR_VAL END) AS 'FIRST_VACCINATION_DATE',
group_concat(CASE ATTR_ID WHEN 'VAX date 2' THEN ATTR_VAL END) AS 'SECOND_VACCINATION_DATE'
FROM SAMPLE_METADATA_TABLE
GROUP BY FILE_ID, ROW_ID
ORDER BY FILE_ID;

CREATE VIEW REPORT1 AS
SELECT 
A.SAMPLE_ID, A.FASTA_PATH, B.NOTES, B.REASON_FOR_SEQUENCING, B.DATE_ARRIVED, B.SEQUENCING_DATE, A.CGS_NUMBER,
B.CT_VALUE, B.SAMPLE_TYPE, A.COVERAGE, A.AVERAGE_DEPTH, A.MUTATIONS,A.MUT_SYN, A.MUT_NSYN, 
A.SUBCLONAL,A.INDELS, A.RAW_READS, A.RUN_INPUT, A.LINEAGE, A.SCORPIO_CALL, A.PANGOLIN_VERSION, A.CLADE, A.AA_SUBSTITUTIONS, 
B.SAMPLE_ID, B.ANALYSIS_DATE, B.LAB_PERSONNEL, B.MACHINE, B.SAMPLE_COLLECTION_DATE, B.DMIS_ID, B.METHOD, B.DMIS_FACILITY_NAME,
B.MILITARY_INSTALLATION, B.STATE_CODE_IF_CONUS, B.AGE, B.SEX, B.SYMPTOM_STATUS, B.VACCINE_TYPE, B.FIRST_VACCINATION_DATE,
B.SECOND_VACCINATION_DATE, B.TIMESTAMP
FROM PRELIMINARY_REPORT_1 A 
LEFT JOIN PRELIMINARY_REPORT_2 B USING (SAMPLE_ID)
WHERE CGS_NUMBER = 'CGS_000302'
GROUP BY
A.SAMPLE_ID, A.FASTA_PATH,B.NOTES, B.REASON_FOR_SEQUENCING, B.DATE_ARRIVED, B.SEQUENCING_DATE, A.CGS_NUMBER,
B.CT_VALUE, B.SAMPLE_TYPE, A.COVERAGE, A.AVERAGE_DEPTH, A.MUTATIONS,A.MUT_SYN, A.MUT_NSYN, 
A.SUBCLONAL,A.INDELS, A.RAW_READS, A.RUN_INPUT, A.LINEAGE, A.SCORPIO_CALL, A.PANGOLIN_VERSION, A.CLADE,
A.AA_SUBSTITUTIONS, B.SAMPLE_ID, B.ANALYSIS_DATE, B.LAB_PERSONNEL, B.MACHINE, B.SAMPLE_COLLECTION_DATE,
B.DMIS_ID, B.METHOD, B.DMIS_FACILITY_NAME,B.MILITARY_INSTALLATION, B.STATE_CODE_IF_CONUS, B.AGE, 
B.SEX, B.SYMPTOM_STATUS, B.VACCINE_TYPE, B.FIRST_VACCINATION_DATE,
B.SECOND_VACCINATION_DATE, B.TIMESTAMP;

CREATE VIEW REPORT_FINAL AS
SELECT
SAMPLE_ID, 
GROUP_CONCAT(DISTINCT NOTES) AS 'NOTES',GROUP_CONCAT(DISTINCT REASON_FOR_SEQUENCING) AS 'REASON_FOR_SEQUENCING',
GROUP_CONCAT(DISTINCT FASTA_PATH) AS 'FASTA_PATH',
GROUP_CONCAT(DISTINCT DATE_ARRIVED) AS 'DATE_ARRIVED', GROUP_CONCAT(DISTINCT SEQUENCING_DATE) AS 'SEQUENCING_DATE', 
GROUP_CONCAT(DISTINCT CGS_NUMBER) AS 'CGS_NUMBER', GROUP_CONCAT(DISTINCT CT_VALUE) AS 'CT_VALUE', GROUP_CONCAT(DISTINCT SAMPLE_TYPE) AS'SAMPLE_TYPE', 
GROUP_CONCAT(DISTINCT COVERAGE) AS 'COVERAGE', GROUP_CONCAT(DISTINCT AVERAGE_DEPTH) AS 'AVERAGE_DEPTH', 
GROUP_CONCAT(DISTINCT MUTATIONS) AS 'MUTATIONS', GROUP_CONCAT(DISTINCT MUT_SYN) AS 'MUT_SYN', GROUP_CONCAT(DISTINCT MUT_NSYN) AS 'MUT_NSYN', 
GROUP_CONCAT(DISTINCT SUBCLONAL) AS 'SUBCLONAL', GROUP_CONCAT(DISTINCT INDELS) AS 'INDELS',GROUP_CONCAT(DISTINCT RAW_READS) AS 'RAW_READS', 
GROUP_CONCAT(DISTINCT RUN_INPUT) AS 'RUN_INPUT', 
GROUP_CONCAT(DISTINCT LINEAGE) AS 'LINEAGE', GROUP_CONCAT(DISTINCT SCORPIO_CALL) AS 'SCORPIO_CALL', 
GROUP_CONCAT(DISTINCT PANGOLIN_VERSION) AS 'PANGOLIN_VERSION', GROUP_CONCAT(DISTINCT CLADE) AS 'CLADE', GROUP_CONCAT(DISTINCT AA_SUBSTITUTIONS) AS 'AA_SUBSTITUTIONS', 
GROUP_CONCAT(DISTINCT SAMPLE_ID) AS 'SAMPLE_ID2', GROUP_CONCAT(DISTINCT ANALYSIS_DATE) AS 'ANALYSIS_DATE', GROUP_CONCAT(DISTINCT LAB_PERSONNEL) AS 'LAB_PERSONNEL', 
GROUP_CONCAT(DISTINCT MACHINE) AS 'MACHINE', GROUP_CONCAT(DISTINCT SAMPLE_COLLECTION_DATE) AS 'SAMPLE_COLLECTION_DATE', GROUP_CONCAT(DISTINCT DMIS_ID) AS 'DMIS_ID', 
GROUP_CONCAT(DISTINCT METHOD) AS 'METHOD', GROUP_CONCAT(DISTINCT DMIS_FACILITY_NAME) AS 'DMIS_FACILITY_NAME', 
GROUP_CONCAT(DISTINCT MILITARY_INSTALLATION) AS 'MILITARY_INSTALLATION', GROUP_CONCAT(DISTINCT STATE_CODE_IF_CONUS) AS 'STATE_CODE_IF_CONUS', 
GROUP_CONCAT(DISTINCT AGE) AS 'AGE', GROUP_CONCAT(SEX) AS 'SEX', GROUP_CONCAT(DISTINCT SYMPTOM_STATUS) AS 'SYMPTOM_STATUS', 
GROUP_CONCAT(DISTINCT VACCINE_TYPE) AS 'VACCINE_TYPE', GROUP_CONCAT(DISTINCT FIRST_VACCINATION_DATE) AS 'FIRST_VACCINATION_DATE', 
GROUP_CONCAT(DISTINCT SECOND_VACCINATION_DATE) AS 'SECOND_VACCINATION_DATE', GROUP_CONCAT(DISTINCT TIMESTAMP) AS 'TIMESTAMP'
from REPORT1 GROUP BY SAMPLE_ID;

.header on
.mode csv
.output ./REPORTS/PRELIMINARY_REPORT_20211118_TEST.csv
select * from REPORT_FINAL;
.output stdout
